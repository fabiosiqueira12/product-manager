{% extends "layout.twig" %}

{% block title_page %}
Gestor de Pedidos | Detalhes
{% endblock %}

{% block links %}
<a href="javascript:window.history.back()" class="btn btn-danger label-left">
    <div class="btn-label">
        <i class="ti-arrow-left"></i>
    </div>
    Voltar
</a>
{% endblock %}

{% block breadcrumb %}
<li class="breadcrumb-item active">Gestor de Pedidos</li>
<li class="breadcrumb-item active">Detalhes</li>
{% endblock %}

{% block modals %}

{% include "pages/orders/products/_search.twig" %}
{% include "pages/orders/_update-estoque.twig" with {
    order: order
} %}

{% endblock %}


{% block main %}
<div class="box bg-white">
    <div class="card-header text-uppercase font-weight-bold">
        Detalhes
    </div>
    <div class="box-block">
        <div class="row">
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Código:</strong>
                    <span>{{order.getCode()}}</span>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>DT Criação:</strong>
                    <span>{{order.getDataInsert()|date('d/m/Y \\à\\s H:i')}}</span>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Forma de Pagamento:</strong>
                    <span>{{order.getTypePaymentDesc()}}</span>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Valor Total:</strong>
                    <span class="font-weight-bold">{{price_format(order.getTotal())}}</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Quantidade Produtos:</strong>
                    <span>{{order.getQtdProducts()}}</span>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Status:</strong>
                    <span>{{order.getStatusDesc()}}</span>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>DT Finalização:</strong>
                    <span>{{order.getDateFinish() is not empty ? order.getDateFinish()|date("d/m/Y \\à\\s H:i") : "--"}}</span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="box bg-white mt-1">
    <div class="card-header font-weight-bold text-uppercase">
        Consumidor
    </div>
    <div class="box-block">
        <div class="row">
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Tipo de Documento:</strong>
                    <span>{{order.getConsumer().isPerson() ? "CPF" : "CNPJ"}}</span>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Tipo de Documento:</strong>
                    <span>{{order.getConsumer().isPerson() ? order.getConsumer().getCpf() : order.getConsumer().getCnpj() }}</span>
                </div>
            </div>
            <div class="col-md-6 col-xs-12">
                <div class="tpl-cadastro-info">
                    <strong>Nome:</strong>
                    <span>{{order.getConsumer().getName()}}</span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="box bg-white mt-1">
    <div style="display: flex;align-items: center;" class="card-header text-uppercase font-weight-bold">
        <span style="margin-right: auto">Produtos</span>
        {% if order.isCreated() %}
        <button type="button" data-target="#modal-produtos" class="btn btn-success btn-new label-left">
            <div class="btn-label">
                <i class="ti-plus"></i>
            </div>
            Adicionar
        </button>
        {% endif %}
    </div>
    <div class="box-block p-0">
        {% include "pages/orders/_products.twig" with {
            order: order,
            products: products
        } %}
    </div>
</div>
{% endblock %}

{% block script %}
<script>

    function updateProduct(el) {
        var item = $(el).data('item');
        $("#modal-update-estoque").find('[name=estoque]').val(item.inventory);
        $("#modal-update-estoque").find('[name=id_product]').val(item.id);
        $("#modal-update-estoque").find('[name=id]').val(item.id);
        $("#modal-update-estoque").find('.qtd-estoque').html(item.inventory);
        $("#modal-update-estoque").find('[name=quantidade]').val(item.quant_order);
        $("#modal-update-estoque").find('[name=qtde_atual]').val(item.quant_order);
        $("#modal-update-estoque").modal('show');
    }

    function rmProduct(el) {
        var idPedido = $(el).data('pedido');
        var ref = $(el).data('ref');
        Swal({
            title: 'Atenção!',
            text: "Você tem certeza que quer remover o produto do pedido?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sim',
            cancelButtonText: 'Não'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: BASE_URL + "pedidos/produtos/delete",
                    data: {
                        ref: ref,
                        id_order: idPedido
                    },
                    dataType: 'json',
                    beforeSend: function () {
                        $("#loader").show();
                    },
                    success: function (response) {
                        if (response.result == 0) {
                            return Swal('Atenção!', response.message, 'error');
                        }
                        window.location.reload();
                    }
                }).always(function () {
                    $("#loader").hide();
                });
            }
        });
    }

    function checkAll(el)
    {
        var isChecked = $(el).is(':checked');
        $(el).closest('table').find('tbody').find('tr').each(function(){
            var quant = $(this).find('input[name="quant"]').val();
            if (quant > 0){
                $(this).find('input[type="checkbox"]').prop('checked',isChecked); 
            }
        });
    }

    function addProducts() {
        var produtos = [];
        var msg = "";
        $("#modal-produtos").find('table').find("tbody").find('tr').each(function () {
            var input = $(this).find('input[type="checkbox"]');
            if ($(input).is(':checked')) {
                var quant = parseInt($(this).find('input[name="quant"]').val());
                if (quant != null && quant != undefined && quant != 0){
                    var product = $(input).data('product');
                    var estoque = parseInt($(input).data('estoque'));
                    if (estoque < quant){
                        msg = "Você só pode adicionar " + estoque + " do produto " + product.title;
                        return false;
                    }
                    if (product != undefined && product != null) {
                        var item = {
                            product: product,
                            estoque: estoque,
                            quant: quant
                        };
                        produtos.push(item);
                    }
                }
            }
        });
        if (msg != ""){
            return Swal("Atenção!",msg,"warning");
        }
        if (produtos.length == 0) {
            return Swal('Atenção!', 'Você precisa selecionar os produtos', 'warning');
        }
        $.ajax({
            type: "POST",
            url: BASE_URL + "pedidos/produtos/add-many",
            data: {
                produtos: produtos,
                id_order: {{order.getId()}}
            },
            beforeSend: function () {
                $("#loader").show();
            },
            success: function (response) {
                response = JSON.parse(response);
                if (response.result == 0) {
                    return Swal('Erro!', response.message, 'error');
                }
                if (response.result == 1) {
                    window.location.reload();
                }
            },
            error: function (response) {
                console.log(response);
            }
        }).always(function () {
            $("#loader").hide();
        });
    }

    function eventEnter(e) {
        if (e.key != 'Enter') {
            return false;
        }
        var search = $('.form-group-search').find('input').val();
        if (search == undefined || search == null || search == '') {
            return Swal('Atenção', 'Você precisa informar algo na busca', 'warning');
        }
        var url = $("#modal-produtos").find('.form-group-search').find("button").data('url');
        ajaxProducts(search, url);
    }

    function searchProducts(element) {
        var search = $(element).closest('.form-group-search').find('input').val();
        if (search == undefined || search == null || search == '') {
            return Swal('Atenção', 'Você precisa informar algo na busca', 'warning');
        }
        var url = $(element).data('url');
        ajaxProducts(search, url);
    }

    function ajaxProducts(search, url) {
        $.ajax({
            type: "POST",
            url: BASE_URL + url,
            data: {
                search_add: search,
                id_order: {{order.id()}}
            },
            beforeSend: function () {
                $("#loader").show();
            },
            success: function (response) {
                $("body").find("#modal-produtos").find('.list-products').html(response);
            },
            error: function (response) {
                console.log(response);
            }
        }).always(function () {
            $("#loader").hide();
        });
    }

    $(document).ready(function(){
        $(".btn-new").on("click",function(){
            var target = $(this).data('target');
            $(target).find(".list-products").html("");
        });
    });

</script>
{% endblock %}